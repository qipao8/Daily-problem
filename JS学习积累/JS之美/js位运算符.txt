&与 |或 ~非 ^异或

原码：二进制表示。二进制首位是符号位，0为正，1为负
反码：正数，反码和原码一样；负数，符号位不变，其他各位取反
补码：正数，补码和原码一样；负数，反码末位加1，有进位则进位，但不改变符号位
运算时统一转成补码运算，负数以补码形式存储。

//非
console.log(~5) //-6
5的原码：0101(首位仅表示符号)
取反即非：1010(首位变为1，为负数，负数以补码形式存储，所以要求其补码)
首位不变，按位取反加1，得到：1110，即-6

//  同或（异或取反）
console.log(~(5^1)) //-5
5-->0101,1-->0001
5^1-->0100
~(5^1)-->1011为负数
1011--以补码形式存储-->1101---->-5

异或和同或来判断整数是否相等（a^b!=0则a与b不相等，a^a==0,a^0==a）

进制转换
parseInt(x,x的进制) 得到x的十进制数
a.toString(n) 得到a转为n进制后的结果

字符串转数字
'9'-'0'===9 //true
~~undefind===0

空值合并运算符(??)
??只有当a为undefind或null时才返回后面的值，||当前面为false时便会返回后面的值
let a=0;
a??1 //0
a||1 //1

Brian Kernighan算法
x&(x-1) 用于将x二进制数中，最后一个1变为0，用这种方法也可以消去并记录1的个数，即一比特数。
运用例子：检测一个数是否为2的倍数，2的倍数二进制表示只有一个1，那么x&(x-1)===0

位操作交货两数 a ^= b;b ^= a;a ^= b;

判断奇偶 a&1 如果结果为1,a为奇数，否则为偶数。